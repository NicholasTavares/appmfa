{"version":3,"file":"token.stories.0c8c12c0.js","sources":["../../node_modules/phosphor-react/dist/icons/CopySimple.esm.js","../../src/components/Token/styles.ts","../../src/components/Token/index.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { renderPathForWeight } from '../lib/index.esm.js';\nimport IconBase from '../lib/IconBase.esm.js';\n\n/* GENERATED FILE */\nvar pathsByWeight = /*#__PURE__*/new Map();\npathsByWeight.set(\"bold\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"220 176 220 36 80 36\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }), React.createElement(\"rect\", {\n    x: \"40\",\n    y: \"76\",\n    width: \"140\",\n    height: \"140\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"24\"\n  }));\n});\npathsByWeight.set(\"duotone\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"rect\", {\n    x: \"40\",\n    y: \"72\",\n    width: \"144\",\n    height: \"144\",\n    opacity: \"0.2\"\n  }), React.createElement(\"polyline\", {\n    points: \"216 184 216 40 72 40\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"40\",\n    y: \"72\",\n    width: \"144\",\n    height: \"144\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\npathsByWeight.set(\"fill\", function () {\n  return React.createElement(React.Fragment, null, React.createElement(\"path\", {\n    d: \"M216,32H72a8,8,0,0,0,0,16H208V184a8,8,0,0,0,16,0V40A8,8,0,0,0,216,32Z\"\n  }), React.createElement(\"rect\", {\n    x: \"32\",\n    y: \"64\",\n    width: \"160\",\n    height: \"160\",\n    rx: \"8\"\n  }));\n});\npathsByWeight.set(\"light\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"216 184 216 40 72 40\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }), React.createElement(\"rect\", {\n    x: \"40\",\n    y: \"72\",\n    width: \"144\",\n    height: \"144\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"12\"\n  }));\n});\npathsByWeight.set(\"thin\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"216 184 216 40 72 40\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }), React.createElement(\"rect\", {\n    x: \"40\",\n    y: \"72\",\n    width: \"144\",\n    height: \"144\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"8\"\n  }));\n});\npathsByWeight.set(\"regular\", function (color) {\n  return React.createElement(React.Fragment, null, React.createElement(\"polyline\", {\n    points: \"216 184 216 40 72 40\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }), React.createElement(\"rect\", {\n    x: \"40\",\n    y: \"72\",\n    width: \"144\",\n    height: \"144\",\n    fill: \"none\",\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"16\"\n  }));\n});\n\nvar renderPath = function renderPath(weight, color) {\n  return renderPathForWeight(weight, color, pathsByWeight);\n};\n\nvar CopySimple = /*#__PURE__*/forwardRef(function (props, ref) {\n  return React.createElement(IconBase, Object.assign({\n    ref: ref\n  }, props, {\n    renderPath: renderPath\n  }));\n});\nCopySimple.displayName = \"CopySimple\";\n\nexport default CopySimple;\n//# sourceMappingURL=CopySimple.esm.js.map\n","import styled from \"styled-components\";\nimport { CopySimple } from \"phosphor-react\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  background-color: ${({ theme }) => theme.colors[\"stone/200\"]};\n  overflow: hidden;\n  border-radius: 1rem;\n  transition: all 500ms;\n\n  &:hover {\n    transform: translateY(-10%) scale(1.02);\n  }\n`;\n\nexport const TokenContainer = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  padding: 1.2rem;\n`;\n\nexport const TokenDetailsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 90%;\n`;\n\nexport const TokenTitle = styled.h3`\n  color: ${({ theme }) => theme.colors[\"gray/800\"]};\n  font-size: 1.5rem;\n`;\n\nexport const TokenNumber = styled.span`\n  color: ${({ theme }) => theme.colors[\"yellow/500\"]};\n  font-size: 1.65rem;\n  font-weight: bold;\n  margin-top: 0.1rem;\n`;\n\nexport const CopyTokenContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n`;\n\nexport const CopyIcon = styled(CopySimple)`\n  font-size: 2.2rem;\n  color: ${({ theme }) => theme.colors[\"gray/800\"]};\n`;\n\nexport const CopyButton = styled.div`\n  position: absolute;\n  top: 0.9rem;\n  right: 0.9rem;\n  border-radius: 50%;\n  cursor: pointer;\n  transition: all 500ms;\n  padding: 0.48rem;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors[\"gray/400\"]};\n    ${CopyIcon} {\n      color: ${({ theme }) => theme.colors.white};\n    }\n  }\n\n  &:active {\n    background-color: ${({ theme }) => theme.colors[\"gray/500\"]};\n    transform: scale(1.05);\n  }\n`;\n\nexport const LineTime = styled.div`\n  width: 100%;\n  height: 0.5rem;\n  background-color: ${({ theme }) => theme.colors[\"cyan/500\"]};\n`;\n","import * as S from \"./styles\";\n\ntype TokenProps = {\n  token: string;\n  expirationDate: string;\n};\n\nexport const Token = ({ token, expirationDate }: TokenProps) => {\n  return (\n    <S.Container>\n      <S.TokenContainer>\n        <S.TokenDetailsContainer>\n          <S.TokenTitle>Token</S.TokenTitle>\n          <S.TokenNumber>{token}</S.TokenNumber>\n        </S.TokenDetailsContainer>\n        <S.CopyTokenContainer>\n          <S.CopyButton\n            onClick={() => {\n              navigator.clipboard.writeText(token);\n            }}\n          >\n            <S.CopyIcon weight=\"light\" />\n          </S.CopyButton>\n        </S.CopyTokenContainer>\n      </S.TokenContainer>\n      <S.LineTime />\n    </S.Container>\n  );\n};\n"],"names":["pathsByWeight","Map","set","color","_jsxs","_Fragment","_jsx","renderPath","__name","weight","renderPathForWeight","CopySimple","forwardRef","props","ref","IconBase","Object","assign","displayName","CopySimple$1","Container","styled","theme","TokenContainer","TokenDetailsContainer","TokenTitle","TokenNumber","CopyTokenContainer","CopyIcon","CopyButton","LineTime","Token","token","S.Container","S.TokenContainer","S.TokenDetailsContainer","S.TokenTitle","S.TokenNumber","S.CopyTokenContainer","S.CopyButton","navigator","S.CopyIcon","S.LineTime"],"mappings":"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"}